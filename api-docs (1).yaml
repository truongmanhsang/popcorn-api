openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:9001
  description: Generated server url
paths:
  /v1/user:
    get:
      tags:
      - user-controller
      operationId: getUsers
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/ocr/advanced/history:
    get:
      tags:
      - ocr-advanced-scan-controller
      operationId: getAdvancedOcrHistoriesOrGetDetail
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: group_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - ocr-advanced-scan-controller
      operationId: updateAdvancedScan
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrAdvancedScan'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - ocr-advanced-scan-controller
      operationId: saveAdvancedScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrAdvancedScan'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - ocr-advanced-scan-controller
      operationId: deleteAdvancedOcrHistory
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrAdvancedScan'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/group:
    get:
      tags:
      - group-controller
      operationId: getGroupsOrGroupDetail
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - group-controller
      operationId: updateGroup
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - group-controller
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - group-controller
      operationId: deleteGroup
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/group/member:
    get:
      tags:
      - group-member-controller
      operationId: getGroupMember
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - group-member-controller
      operationId: updateMemberOfGroup
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMemberRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - group-member-controller
      operationId: addMemberToGroup
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMemberRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - group-member-controller
      operationId: deleteMemberFromGroup
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMemberRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/ocr/image/scan:
    post:
      tags:
      - ocr-image-scan-controller
      operationId: scanImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrImageScan'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/ocr/image/history:
    get:
      tags:
      - ocr-image-scan-controller
      operationId: getImageOcrHistoriesOrGetDetail
      parameters:
      - name: group_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - ocr-image-scan-controller
      operationId: saveImageScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrImageScan'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - ocr-image-scan-controller
      operationId: deleteImageOcrHistory
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrImageScan'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/ocr/advanced/scan:
    post:
      tags:
      - ocr-advanced-scan-controller
      operationId: scanAdvanced
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OcrAdvancedScan'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/train/status:
    post:
      tags:
      - object-detection-controller
      operationId: getTrainStatus
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Train'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/train/start:
    post:
      tags:
      - object-detection-controller
      operationId: train
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Train'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/test:
    post:
      tags:
      - object-detection-controller
      operationId: test
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/model/undeploy:
    post:
      tags:
      - object-detection-controller
      operationId: undeployModel
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelObjectDetection'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/model/train/cancel:
    post:
      tags:
      - object-detection-controller
      operationId: cancelTrain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Train'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/model/status:
    post:
      tags:
      - object-detection-controller
      operationId: getModelStatus
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelObjectDetection'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/model/deploy:
    post:
      tags:
      - object-detection-controller
      operationId: deployModel
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelObjectDetection'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/model/deploy/cancel:
    post:
      tags:
      - object-detection-controller
      operationId: cancelDeployModel
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelObjectDetection'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/labeling:
    post:
      tags:
      - object-detection-controller
      operationId: boundingBox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Labeling'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/label:
    get:
      tags:
      - object-detection-controller
      operationId: getListLabelOfDataset
      parameters:
      - name: dataset_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: group_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - object-detection-controller
      operationId: createLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - object-detection-controller
      operationId: deleteLabel
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/object-detection/image:
    post:
      tags:
      - object-detection-controller
      operationId: getImageInDataset
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - object-detection-controller
      operationId: deleteImage
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/image/upload:
    post:
      tags:
      - object-detection-controller
      operationId: uploadImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/dataset:
    get:
      tags:
      - object-detection-controller
      operationId: getListDataset
      parameters:
      - name: group_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - object-detection-controller
      operationId: createDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - object-detection-controller
      operationId: deleteDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/model:
    get:
      tags:
      - object-detection-controller
      operationId: getListModel
      parameters:
      - name: dataset_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: group_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - object-detection-controller
      operationId: deleteModel
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/object-detection/evaluate:
    get:
      tags:
      - object-detection-controller
      operationId: evaluate
      parameters:
      - name: dataset_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: group_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: model_id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/my-account:
    get:
      tags:
      - common-controller
      operationId: myAccount
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/group/belong:
    get:
      tags:
      - group-controller
      operationId: getBelongGroups
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /:
    get:
      tags:
      - home-controller
      operationId: index_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
      - home-controller
      operationId: index_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
      - home-controller
      operationId: index_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - home-controller
      operationId: index_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    options:
      tags:
      - home-controller
      operationId: index_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    head:
      tags:
      - home-controller
      operationId: index_5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
      - home-controller
      operationId: index
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        role:
          type: integer
          format: int32
        email:
          type: string
        description:
          type: string
        disabled:
          type: boolean
        created_at:
          type: string
          format: date-time
    AdvancedScanResult:
      type: object
      properties:
        index:
          type: integer
          format: int32
        box_name:
          type: string
        w:
          type: integer
          format: int32
        h:
          type: integer
          format: int32
        x:
          type: integer
          format: int32
        "y":
          type: integer
          format: int32
        ltor_text:
          type: string
        ltor_rel:
          type: number
          format: double
        rtol_text:
          type: string
        rtol_rel:
          type: number
          format: double
        utod_text:
          type: string
        utod_rel:
          type: number
          format: double
        dtou_text:
          type: string
        dtou_rel:
          type: number
          format: double
    OcrAdvancedResult:
      type: object
      properties:
        image:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdvancedScanResult'
    OcrAdvancedScan:
      type: object
      properties:
        group_id:
          type: integer
          format: int64
        status:
          type: integer
          format: int32
        image:
          type: string
        origin_image:
          type: string
        origin_image_name:
          type: string
        settings:
          $ref: '#/components/schemas/OcrSettings'
        result:
          $ref: '#/components/schemas/OcrAdvancedResult'
    OcrSettings:
      type: object
      properties:
        language_hint:
          type: string
        reliability:
          type: string
    Group:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image_scan_flag:
          type: boolean
        advanced_scan_flag:
          type: boolean
        ocr_project_id:
          type: string
        object_detection_flag:
          type: boolean
        obd_project_id:
          type: string
    GroupMember:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        role:
          type: integer
          format: int32
        disabled:
          type: boolean
        created_at:
          type: string
          format: date-time
    GroupMemberRequest:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GroupMember'
    ImageScanResult:
      type: object
      properties:
        index:
          type: integer
          format: int32
        text:
          type: string
        rel:
          type: number
          format: double
    OcrImageResult:
      type: object
      properties:
        image:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImageScanResult'
    OcrImageScan:
      type: object
      properties:
        group_id:
          type: integer
          format: int64
        image:
          type: string
        origin_image:
          type: string
        origin_image_name:
          type: string
        settings:
          $ref: '#/components/schemas/OcrSettings'
        result:
          $ref: '#/components/schemas/OcrImageResult'
    Train:
      type: object
      properties:
        dataset_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        model_name:
          type: string
        model_type:
          type: integer
          format: int32
        node_hours:
          type: integer
          format: int32
        gpc_dataset_id:
          type: integer
          format: int64
    TestImage:
      type: object
      properties:
        index:
          type: integer
          format: int32
        image:
          type: string
    TestRequest:
      type: object
      properties:
        dataset_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        model_id:
          type: integer
          format: int64
        images:
          type: array
          items:
            $ref: '#/components/schemas/TestImage'
        image:
          type: string
    ModelObjectDetection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dataset_id:
          type: integer
          format: int64
        node_count:
          type: integer
          format: int32
        group_id:
          type: integer
          format: int64
        name:
          type: string
        gcp_model_id:
          type: string
        status:
          type: integer
          format: int32
        state:
          type: string
    Labeling:
      type: object
      properties:
        group_id:
          type: integer
          format: int32
        dataset_id:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/LabelingData'
    LabelingData:
      type: object
      properties:
        bounding_box_id:
          type: integer
          format: int32
        image_id:
          type: integer
          format: int32
        label_id:
          type: integer
          format: int32
        left_x:
          type: number
          format: double
        left_y:
          type: number
          format: double
        top_x:
          type: number
          format: double
        top_y:
          type: number
          format: double
        right_x:
          type: number
          format: double
        right_y:
          type: number
          format: double
        down_x:
          type: number
          format: double
        down_y:
          type: number
          format: double
        action:
          type: integer
          format: int32
    Label:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dataset_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        name:
          type: string
        gcp_label_name:
          type: string
    FilterImageRequest:
      type: object
      properties:
        label_name:
          type: string
    ImageRequest:
      type: object
      properties:
        dataset_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        image_data:
          type: string
        image_name:
          type: string
        filter:
          $ref: '#/components/schemas/FilterImageRequest'
        page:
          $ref: '#/components/schemas/Page'
    Page:
      type: object
      properties:
        page_size:
          type: integer
          format: int32
        page_index:
          type: integer
          format: int32
    Dataset:
      type: object
      properties:
        id:
          type: integer
          format: int64
        display_name:
          type: string
        name:
          type: string
        group_id:
          type: integer
          format: int64
        number_of_labels:
          type: integer
          format: int64
        number_of_images:
          type: integer
          format: int64
        updated_at:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
    Model:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dataset_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        name:
          type: string
        model_id:
          type: integer
          format: int64
        status:
          type: integer
          format: int32
        state:
          type: string
